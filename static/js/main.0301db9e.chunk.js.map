{"version":3,"sources":["Components/HomePage/HomePage.tsx","api.ts","Components/PersonRow/PersonRow.tsx","Components/PeopleTable/PeopleTable.tsx","Components/Loader/Loader.tsx","Components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","getPeople","a","fetch","peopleFromServer","json","PersonRow","person","className","name","sex","born","died","fatherName","motherName","PeopleTable","people","map","slug","Loader","PeoplePage","useState","setPeople","isLoading","setIsLoading","useEffect","then","response","peopleArray","mother","find","parent","father","App","to","path","element","ReactDOM","render","document","getElementById"],"mappings":"4QAEaA,EAAqB,WAChC,OACE,4C,sCCDSC,EAAS,uCAAG,4BAAAC,EAAA,sEACQC,MAH7B,qEAEqB,cACjBC,EADiB,yBAGhBA,EAAiBC,QAHD,2CAAH,qDCGTC,EAA6B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3C,OACE,+BACE,oBAAIC,UAAU,YAAd,SAA2BD,EAAOE,OAClC,oBAAID,UAAU,YAAd,SAA2BD,EAAOG,MAClC,oBAAIF,UAAU,YAAd,SAA2BD,EAAOI,OAClC,oBAAIH,UAAU,YAAd,SAA2BD,EAAOK,OAClC,oBAAIJ,UAAU,YAAd,SAA2BD,EAAOM,aAClC,oBAAIL,UAAU,YAAd,SAA2BD,EAAOO,iBCN3BC,G,MAA+B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC7C,OACE,wBAAOR,UAAU,QAAjB,UACE,yBAASA,UAAU,iBAAnB,0BACA,uBAAOA,UAAU,cAAjB,SACE,+BACE,oBAAIA,UAAU,YAAd,kBACA,oBAAIA,UAAU,YAAd,iBACA,oBAAIA,UAAU,YAAd,kBACA,oBAAIA,UAAU,YAAd,kBACA,oBAAIA,UAAU,YAAd,yBACA,oBAAIA,UAAU,YAAd,8BAGJ,qCACE,wBACA,qBAAKA,UAAU,eACf,qBAAKA,UAAU,eACf,qBAAKA,UAAU,eACf,qBAAKA,UAAU,eACf,qBAAKA,UAAU,kBAEjB,gCACGQ,EAAOC,KAAI,SAAAV,GAAM,OAChB,cAAC,EAAD,CAAWA,OAAQA,GAAaA,EAAOW,gBC7BpCC,G,MAAmB,kBAC9B,qBAAKX,UAAU,SAAf,SACE,qBAAKA,UAAU,wBCANY,EAAuB,WAClC,MAA4BC,mBAAmB,IAA/C,mBAAOL,EAAP,KAAeM,EAAf,KACA,EAAkCD,oBAAkB,GAApD,mBAAOE,EAAP,KAAkBC,EAAlB,KAkBA,OANAC,qBAAU,WACRxB,IACGyB,MAAK,SAAAC,GAAQ,OAAIL,GAZFM,EAYuBD,GAXrBV,KAAI,SAAAV,GAAM,kCACzBA,GADyB,IAE5BsB,OAAQD,EAAYE,MAAK,SAAAC,GAAM,OAC7BA,EAAOtB,OAASF,EAAOO,eAAgB,KACzCkB,OAAQJ,EAAYE,MAAK,SAAAC,GAAM,OAC7BA,EAAOtB,OAASF,EAAOM,eAAgB,WAN7C,IAAoBe,KAafF,MAAK,kBAAMF,GAAa,QAC1B,IAGD,mCACGD,EACC,cAAC,EAAD,IAEA,qCACE,6CACA,cAAC,EAAD,CAAaP,OAAQA,UCRhBiB,EAnBH,kBACV,sBAAKzB,UAAU,MAAf,UACE,8CACA,iCACE,gCACE,cAAC,IAAD,CAAM0B,GAAG,QAAQ1B,UAAU,WAA3B,yBACA,cAAC,IAAD,CAAM0B,GAAG,UAAU1B,UAAU,WAA7B,8BAIJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2B,KAAK,QAAQC,QAAS,cAAC,EAAD,MAC7B,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,yDCd/BC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0301db9e.chunk.js","sourcesContent":["import React from 'react';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <h2>Home page</h2>\n  );\n};\n","export const BASE_URL\n  = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = async () => {\n  const peopleFromServer = await fetch(BASE_URL);\n\n  return peopleFromServer.json();\n};\n","import React from 'react';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonRow: React.FC<Props> = ({ person }) => {\n  return (\n    <tr>\n      <td className=\"table__td\">{person.name}</td>\n      <td className=\"table__td\">{person.sex}</td>\n      <td className=\"table__td\">{person.born}</td>\n      <td className=\"table__td\">{person.died}</td>\n      <td className=\"table__td\">{person.fatherName}</td>\n      <td className=\"table__td\">{person.motherName}</td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { PersonRow } from '../PersonRow/PersonRow';\nimport './PeopleTable.scss';\n\ntype Props = {\n  people: Person[]\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <table className=\"table\">\n      <caption className=\"table__caption\">People table</caption>\n      <thead className=\"table__head\">\n        <tr>\n          <th className=\"table__th\">Name</th>\n          <th className=\"table__th\">Sex</th>\n          <th className=\"table__th\">Born</th>\n          <th className=\"table__th\">Died</th>\n          <th className=\"table__th\">Father Name</th>\n          <th className=\"table__th\">Mother Name</th>\n        </tr>\n      </thead>\n      <colgroup>\n        <col />\n        <col className=\"table__col\" />\n        <col className=\"table__col\" />\n        <col className=\"table__col\" />\n        <col className=\"table__col\" />\n        <col className=\"table__col\" />\n      </colgroup>\n      <tbody>\n        {people.map(person => (\n          <PersonRow person={person} key={person.slug} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\nimport { Loader } from '../Loader/Loader';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  function addParents(peopleArray: Person[]) {\n    return (peopleArray.map(person => ({\n      ...person,\n      mother: peopleArray.find(parent => (\n        parent.name === person.motherName)) || null,\n      father: peopleArray.find(parent => (\n        parent.name === person.fatherName)) || null,\n    })));\n  }\n\n  useEffect(() => {\n    getPeople()\n      .then(response => setPeople(addParents(response)))\n      .then(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <h2>People page</h2>\n          <PeopleTable people={people} />\n        </>\n      )}\n    </>\n  );\n};\n","import { Routes, Route, Link } from 'react-router-dom';\nimport './App.scss';\nimport { HomePage } from './Components/HomePage/HomePage';\nimport { PeoplePage } from './Components/PeoplePage/PeoplePage';\n\nconst App = () => (\n  <div className=\"App\">\n    <h1>People table</h1>\n    <header>\n      <nav>\n        <Link to=\"/home\" className=\"nav-link\"> Home page </Link>\n        <Link to=\"/people\" className=\"nav-link\">People page</Link>\n      </nav>\n    </header>\n\n    <Routes>\n      <Route path=\"/home\" element={<HomePage />} />\n      <Route path=\"/people\" element={<PeoplePage />} />\n      <Route path=\"/\" element={<HomePage />} />\n      <Route path=\"*\" element={<h3>Page not found</h3>} />\n    </Routes>\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}